name: Test Xcode Build on Self-Hosted Runner

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:

jobs:
  xcode-build-test:
    name: Test Xcode Build
    runs-on: [self-hosted, macOS, metamask-mobile]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check system information
        run: |
          echo "üñ•Ô∏è System Information:"
          echo "- macOS Version: $(sw_vers -productVersion)"
          echo "- Architecture: $(uname -m)"
          echo "- Available Memory: $(sysctl -n hw.memsize | awk '{ byte =$1 /1024/1024/1024; print byte " GB" }')"
          echo "- CPU Cores: $(sysctl -n hw.ncpu)"

      - name: Check Xcode installation
        run: |
          echo "üî® Xcode Information:"
          if command -v xcode-select &> /dev/null; then
            echo "- Xcode Path: $(xcode-select -p)"
            echo "- Xcode Version: $(xcodebuild -version | head -1)"
            echo "- Available SDKs: $(xcodebuild -showsdks | grep iOS | tail -1)"
          else
            echo "‚ùå Xcode not found"
            exit 1
          fi

      - name: Check iOS Simulators
        run: |
          echo "üì± iOS Simulators:"
          xcrun simctl list devices available | grep -E "iPhone|iPad" | head -5
          echo "- Checking for iPhone 15 simulator..."
          if xcrun simctl list devices available | grep -q "iPhone 15"; then
            echo "‚úÖ iPhone 15 simulator available"
          else
            echo "‚ö†Ô∏è iPhone 15 simulator not found, will use first available iPhone"
            AVAILABLE_IPHONE=$(xcrun simctl list devices available | grep iPhone | head -1 | sed 's/.*(\([^)]*\)).*/\1/')
            echo "Will use: $AVAILABLE_IPHONE"
            echo "SIMULATOR_ID=$AVAILABLE_IPHONE" >> $GITHUB_ENV
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'

      - name: Check Node.js and package managers
        run: |
          echo "üì¶ Development Tools:"
          echo "- Node.js Version: $(node -v)"
          echo "- npm Version: $(npm -v)"
          echo "- Yarn Version: $(yarn -v)"

      - name: Check CocoaPods installation
        run: |
          echo "‚òï CocoaPods Information:"
          if command -v pod &> /dev/null; then
            echo "- CocoaPods Version: $(pod --version)"
            echo "- Ruby Version: $(ruby -v)"
            echo "- Gem Version: $(gem -v)"
          else
            echo "‚ùå CocoaPods not found"
            exit 1
          fi

      - name: Install dependencies
        run: |
          echo "üì• Installing Node.js dependencies..."
          yarn --immutable
          echo "‚úÖ Node.js dependencies installed successfully"

      - name: Verify critical dependencies
        run: |
          echo "üîç Verifying critical Node modules..."
          if [ -d "node_modules/react-native" ]; then
            echo "‚úÖ react-native found: $(node -p "require('./node_modules/react-native/package.json').version")"
          else
            echo "‚ùå react-native not found"
            exit 1
          fi

          if [ -d "node_modules/@react-native-community/cli" ]; then
            echo "‚úÖ React Native CLI found"
          else
            echo "‚ùå React Native CLI not found"
            exit 1
          fi

      - name: Install iOS dependencies
        run: |
          echo "üçé Installing iOS dependencies..."
          cd ios
          pod install --repo-update --verbose
          echo "‚úÖ CocoaPods dependencies installed successfully"
        env:
          GITHUB_CI: "true"

      - name: Verify iOS workspace
        run: |
          echo "üîç Verifying iOS workspace and schemes..."
          cd ios
          if [ -f "MetaMask.xcworkspace/contents.xcworkspacedata" ]; then
            echo "‚úÖ MetaMask.xcworkspace found"
          else
            echo "‚ùå MetaMask.xcworkspace not found"
            exit 1
          fi

          echo "Available schemes:"
          xcodebuild -workspace MetaMask.xcworkspace -list

      - name: Build iOS app
        run: |
          echo "üèóÔ∏è Building iOS app..."
          cd ios

          # Use environment variable if iPhone 15 wasn't available
          DESTINATION="platform=iOS Simulator,name=iPhone 15,OS=latest"
          if [ ! -z "$SIMULATOR_ID" ]; then
            DESTINATION="platform=iOS Simulator,id=$SIMULATOR_ID"
          fi

          xcodebuild -workspace MetaMask.xcworkspace \
            -scheme MetaMask \
            -configuration Debug \
            -destination "$DESTINATION" \
            -derivedDataPath build/ \
            -quiet \
            build
        env:
          GITHUB_CI: "true"
          CI: "true"

      - name: Build status
        run: echo "‚úÖ Xcode build completed successfully on self-hosted runner"
